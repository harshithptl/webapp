name: Run Unit Tests

on:
  pull_request:
    branches:
      - main

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: 'maven'

      - name: Start PostgreSQL
        run: |
          sudo sed -i "s/local   all             all             peer/local   all             all             md5/" /etc/postgresql/*/main/pg_hba.conf
          sudo sed -i "s/host    all             all             127.0.0.1\/32            trust/host    all             all             127.0.0.1\/32            md5/" /etc/postgresql/*/main/pg_hba.conf
          sudo sed -i "s/host    all             all             ::1\/128                 trust/host    all             all             ::1\/128                 md5/" /etc/postgresql/*/main/pg_hba.conf
          
          sudo systemctl restart postgresql
          
          sudo systemctl start postgresql
          sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname = '$POSTGRES_DB'" | grep -q 1 || sudo -u postgres psql -c "CREATE DATABASE \"$POSTGRES_DB\";"
          sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname = '$POSTGRES_USER'" | grep -q 1 || sudo -u postgres psql -c "CREATE USER \"$POSTGRES_USER\" WITH LOGIN PASSWORD '$POSTGRES_PASSWORD';"
          sudo -u postgres psql -c "ALTER DATABASE $POSTGRES_DB OWNER TO $POSTGRES_USER;"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE \"$POSTGRES_DB\" TO \"$POSTGRES_USER\";"
          sudo -u postgres psql -c "ALTER ROLE $POSTGRES_USER WITH LOGIN;"
          sudo -u postgres psql -c "ALTER ROLE $POSTGRES_USER WITH CREATEDB;"
          sudo -u postgres psql -c "ALTER ROLE $POSTGRES_USER WITH CREATEROLE;"


      - name: Install Dependencies
        run: mvn clean install -DskipTests

      - name: Run Unit Tests
        run: mvn test
        env:
          SPRING_APPLICATION_JSON: |
            {
              "spring.datasource.url": "jdbc:postgresql://localhost:5432/${{ secrets.POSTGRES_DB }}",
              "spring.datasource.username": "${{ secrets.POSTGRES_USER }}",
              "spring.datasource.password": "${{ secrets.POSTGRES_PASSWORD}}",
              "spring.datasource.driver-class-name": "org.postgresql.Driver",
              "spring.jpa.hibernate.ddl-auto": "update"
            }